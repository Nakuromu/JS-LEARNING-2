{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAF,EAAQ,CAACH,SAAUA,EAAUC,MAAOA,IAElCG,EAAO,CAACJ,SAAUA,EAAUC,MAAOA,GAAO,GAEjDA,EAAM,G,CAIjB,MAAMQ,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAmBJ,SAASC,cAAc,mBAEhDF,EAAOM,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,IAAIC,EAAaC,SAASP,EAAaQ,OACnCC,EAAYF,SAASN,EAAYO,OACjCE,EAAiB,GAElBV,EAAaQ,MAAQ,GAAKP,EAAYO,MAAQ,GAAKN,EAAiBM,MAAQ,IAC3EG,EAAA1B,GAAS2B,OAAOC,QAAQ,2CAG5B,IAAI,IAAIC,EAAQZ,EAAiBM,MAAOM,EAAQ,EAAGA,IAC/CJ,GAAiB,EAEjBvB,EAAcuB,EAAgBJ,GAAYS,MAAK,EAAC3B,SAACA,EAAQC,MAAEA,MACvDsB,EAAA1B,GAAS2B,OAAOI,QAAQ,uBAAqB5B,QAAiBC,MAAU,IACzE4B,OAAM,EAAC7B,SAACA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,sBAAoBzB,QAAeC,MAAU,IAGzEiB,GAAcG,C","sources":["src/leson9/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({position: position, delay: delay})\n              } else {\n                  reject({position: position, delay: delay})\n              }\n        }, delay)\n    })\n  }\n\nconst formEl = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepDelayEl = document.querySelector('[name=\"step\"]');\nconst promisesAmountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    let firstDelay = parseInt(firstDelayEl.value);\n    let stepDelay = parseInt(stepDelayEl.value);\n    let promisesAmount = 0;\n\n    if(firstDelayEl.value < 0 || stepDelayEl.value < 0 || promisesAmountEl.value < 0){\n        Notiflix.Notify.failure(`You written value which less than zero!`);\n    }\n\n    for(let index = promisesAmountEl.value; index > 0; index--){\n        promisesAmount +=1;\n\n        createPromise(promisesAmount, firstDelay).then(({position, delay}) => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }).catch(({position, delay}) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n\n        firstDelay += stepDelay;\n    }\n})\n"],"names":["$1GAPJ","parcelRequire","$805fa2993db4b27a$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$805fa2993db4b27a$var$formEl","document","querySelector","$805fa2993db4b27a$var$firstDelayEl","$805fa2993db4b27a$var$stepDelayEl","$805fa2993db4b27a$var$promisesAmountEl","addEventListener","event","preventDefault","firstDelay","parseInt","value","stepDelay","promisesAmount","$parcel$interopDefault","Notify","failure","index","then","success","catch"],"version":3,"file":"03-promises.61e47041.js.map"}