{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,SAAUA,EAAUC,MAAMA,IAEnCG,EAAO,CAACJ,SAAUA,EAAUC,MAAMA,G,GAEnCA,E,IAKP,IAAMQ,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAmBJ,SAASC,cAAc,mBAGhDF,EAAOM,iBAAiB,UAAU,SAACC,GAEjCA,EAAMC,iBAEN,IAAIC,EAAaC,SAASP,EAAaQ,OACnCC,EAAYF,SAASN,EAAYO,OACjCE,EAAiB,EAErB,GAAGJ,EAAa,GAAKG,EAAY,GAAKP,EAAiBM,MAAQ,EAC7D,OAAOG,EAAA1B,GAAS2B,OAAOC,QAAS,2CAGlC,IAAK,IAAIC,EAAQZ,EAAiBM,MAAOM,EAAQ,EAAGA,GAAS,EAG7D3B,EAFAuB,GAAkB,EAEYJ,GAC5BS,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBsB,EAAA1B,GAAS2B,OAAOK,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEtE8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACnBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,sBAAqCK,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGnEiB,GAAcG,C","sources":["src/leson9/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position: position, delay:delay});\n      } else {\n        reject({position: position, delay:delay});\n      }\n    }, delay);\n  })\n}\n\n\nconst formEl = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepDelayEl = document.querySelector('[name=\"step\"]');\nconst promisesAmountEl = document.querySelector('[name=\"amount\"]');\n\n\nformEl.addEventListener('submit', (event) => {\n\n  event.preventDefault();\n\n  var firstDelay = parseInt(firstDelayEl.value);\n  let stepDelay = parseInt(stepDelayEl.value);\n  var promisesAmount = 0;\n  \n  if(firstDelay < 0 || stepDelay < 0 || promisesAmountEl.value < 0){\n    return Notiflix.Notify.failure(`You written value which less than zero!`);\n  }\n\n  for (let index = promisesAmountEl.value; index > 0; index -= 1) {\n\t\tpromisesAmount += 1;\n\n\t\tcreatePromise(promisesAmount, firstDelay)\n\t\t\t.then(({ position, delay }) => {\n\t\t\t\tNotiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\t})\n\t\t\t.catch(({ position, delay }) => {\n\t\t\t\tNotiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t\t});\n\n    firstDelay += stepDelay;\n  }\n})\n\n\n\n"],"names":["$ejkSG","parcelRequire","$f758e5adda223da2$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$f758e5adda223da2$var$formEl","document","querySelector","$f758e5adda223da2$var$firstDelayEl","$f758e5adda223da2$var$stepDelayEl","$f758e5adda223da2$var$promisesAmountEl","addEventListener","event","preventDefault","firstDelay","parseInt","value","stepDelay","promisesAmount","$parcel$interopDefault","Notify","failure","index","then","param","success","concat","catch"],"version":3,"file":"03-promises.5b6f01db.js.map"}